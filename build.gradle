plugins {
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'java'
	id 'war'
}

apply from: '../common/gradle/tomcat.config.gradle'

ext {
	file_name_build = 'odeon-wss-build.war'
	file_name_prod = 'odeon-wss.war'
	file_name_int = 'odeon-int-wss.war'
}


tasks.named('processResources') {
	filesMatching('project.properties') {
		expand(project.properties)
	}
}

bootWar {
	archiveFileName = file_name_build
}

group = 'com.romanpulov'
version = '0.14.10'

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	//spring boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//dialects to support SQLite
	implementation 'org.hibernate.orm:hibernate-community-dialects'

	//sqlite
	implementation 'org.xerial:sqlite-jdbc:3.46.0.0'

	//ms access
	implementation 'com.healthmarketscience.jackcess:jackcess:4.0.6'

	//json
	implementation 'org.json:json:20231013'

	//custom configuration
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	//api doc
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	//jutils
	implementation 'com.romanpulov:jutils-core:0.4.2'

	// https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	//test
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "com.vaadin.external.google", module:"android-json"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('deployInt', Copy) {
	dependsOn(bootWar)
	from "build/libs"
	into tomcat_webapps
	include file_name_build
	rename file_name_build, file_name_int
}

tasks.register('deployProd', Copy) {
	dependsOn(bootWar)
	from "build/libs"
	into tomcat_webapps
	include file_name_build
	rename file_name_build, file_name_prod
}

tasks.register("testFull") {
	group = "application"
	description = "Runs the Spring Boot application with the full-tests profile"
	doFirst {
		tasks.test.configure {
			systemProperty("spring.profiles.active", "full-tests")
		}
	}
	finalizedBy("test")
}